
        Grammar<PARSERTYPE> g{
            {
functionDeclaration,
constexprCheck,
returnType,
name,
parameterList,
exceptionSyntax,
contracts,
returnInitialisationType,
Type,
returnList,
Initialisation,
rdash,
returnInitialisation,
parameterInitialisation,
pdash,
parameterInitialisationType,
exceptionListDash,
exceptSyntax,
ensureSyntax,
pdash3,
rdash6,
functionDeclaration15,
functionDeclaration1516,
functionDeclaration151617,
functionDeclaration15161718,
functionDeclaration15161719,
functionDeclaration151620,
functionDeclaration15162021,
functionDeclaration15162022,
functionDeclaration1523,
functionDeclaration152324,
functionDeclaration152325,
functionDeclaration1526,
functionDeclaration152627,
functionDeclaration152628,
functionDeclaration1531,
functionDeclaration153132,
functionDeclaration153133,

        },
        {
function,
squareOpen,
squareClose,
ID,
parenthesisOpen,
parenthesisClose,
curlyOpen,
curlyClose,
comma,
Return,
readOnly,
writeOnly,
moveOnly,
readWrite,
readMove,
writeMove,
Export,
Constexpr,
Consteval,
Nullptr,
throws,
Expect,
Ensures,
Int_8,
Int_16,
Int_32,
Int_64,
Uint_8,
Uint_16,
Uint_32,
Uint_64,
char_8,
char_16,
char_32,
Float,
Double,
Byte,
Equal,
comma,
Return,
identifier,

        },
        
"functiondeclaration"

        };
    
